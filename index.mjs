// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var s=e,a=r,n=function(e){var r,s;for(r=[],s=0;s<e.length;s++)r.push(e[s]);return r};var i=function(e,r){var i,t,o,h,d,p,f,m,c;if((d=r.length)<(p=(o=e.shape).length))throw new Error("invalid argument. Cannot broadcast an array to a shape having fewer dimensions. Arrays can only be broadcasted to shapes having the same or more dimensions.");for(i=[],m=0;m<d;m++)i.push(0);for(h=e.strides,m=d-1;m>=0;m--)if(!((c=p-d+m)<0)){if(f=o[c],0!==(t=r[m])&&t<f)throw new Error(a("invalid argument. Input array cannot be broadcast to the specified shape, as the specified shape has a dimension whose size is less than the size of the corresponding dimension in the input array. Array shape: (%s). Desired shape: (%s). Dimension: %u.",n(o).join(", "),n(r).join(", "),m));if(f===t)i[m]=h[c];else{if(1!==f)throw new Error(a("invalid argument. Input array and the specified shape are broadcast incompatible. Array shape: (%s). Desired shape: (%s). Dimension: %u.",n(o).join(", "),n(r).join(", "),m));i[m]=0}}return s(e.dtype,e.data,n(r),i,e.offset,e.order)};export{i as default};
//# sourceMappingURL=index.mjs.map
